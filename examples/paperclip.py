import subprocess
import requests
import time

from llm_optimize import optimize, eval_utils

TIMEOUT = 30
HOST = "http://localhost:8800"

x0 = f"""
import requests

requests.get('{HOST}/make/paperclip')
requests.get('{HOST}/make/paperclip')
requests.get('{HOST}/make/paperclip')
"""

TASK = f"""
You are a python agent tasked with generating code to create the most paperclips in {TIMEOUT} seconds.

The paperclips are generated by making a GET request with `paperclip` to a local flask HTTP server.

Very functions, imports, threading, processing to generate as many paperclips as possible.

Rules:
* Only use python3.8 builtins and the requests library (no pip install)
* You must make requests to {HOST}
* If the script timeouts, you make no paperclips
"""

QUESTION = """
What is the next x to try such that more paper clips are generated? 
"""


def run_factory(script):
    requests.get(f"{HOST}/reset")
    start = time.time()
    try:
        eval_utils.exec_temp_script_unsafe(script, timeout=TIMEOUT + 5)
        assets = requests.get(f"{HOST}/assets").json()
        score = assets.get("paperclip", 0)
        time_elapsed = time.time() - start
        return (
            score,
            f"Factory Assets = {assets}, Time = {time_elapsed:.3f}s, Paperclips Generated = {score}",
        )
    except RuntimeError as e:
        return (0.0, repr(e))
    except subprocess.TimeoutExpired:
        time_elapsed = time.time() - start
        return (0.0, f"Timeout, Time = {time_elapsed:.3f}s")


if __name__ == "__main__":
    best_code = optimize.run(TASK, QUESTION, run_factory, x0=x0, stop_score=1e9, max_steps=3)
    print(best_code)
